continue
rank
t
continue
continuw
rank
t
per
continue
per
rank
t
continue
t
rank
per
rank
t
continue
rank
t
continue
t
rank
t
rank
continue
refersh
referse
rank
rank.reverse!.index(test_avg_performance).to_i+1
continue
continuw
rank.reverse!.index(test_avg_performance).to_i+1
rank.reverse!
rank.reverse
rank
continue
rank
t
continue
contiie
t.index(test_avg_performance).to_i+1
rank.index(test_avg_performance).to_i+1
t.index(18)+1
t.index(18)
t
rank
continue
rank
rnk
continue
rnk
continue
rank.reverse!
rank
ranl
continue
return rank.index(test_avg_performance).to_i+1
rank.reverse!
test_avg_performance
rank.index(test_avg_performance).to_i+1
rank
continue
rank=rank.reverse!
rank=rank.reverse
rank
rank.reverse!
rank.index(test_avg_performance).to_i+1
rank
ranl
continue
Student.where(:standard_id=>current_student.id).joins(:results).distinct.map{|stu| stu.results.map{|per| per.percentage}}
per.inspect
per
rank
continue
rank=per.map{|p| p.sum/p.size}
========================
rank
========================
continue
@current_admin
@current_teacher
current_teacher
current_admin
